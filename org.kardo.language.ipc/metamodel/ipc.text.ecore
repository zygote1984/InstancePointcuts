@"import"("java"="platform:/plugin/org.emftext.language.java/metamodel/java.ecore", "aspectj"="platform:/resource/org.kardo.language.aspectj/metamodel/aspectj.ecore")

package ipc // this is the package name 
        ipc // this is the namespace prefix
        "http://www.emftext.org/language/ipc" // the namespace URI 
	{


	abstract class Ipc extends IpcUnionChild{
	}

	class InstancePointcut extends aspectj::pointcuts::Pointcut, Ipc{
		containment reference java::types::TypeReference type (1..1) ;
		containment reference IpcExpression expr(1..1);
	}

	class IpcExpression{
		containment reference IpcSubExpression addExpression(1..1);
		containment reference IpcSubExpression removeExpression(0..1);
	}

	class IpcSubExpression{
	    containment reference Event event(1..2);
	}
	
	abstract class Event{
		containment reference aspectj::pcexp::PointcutExpression pcexp (1..1);
	}
	
	class BeforeEvent extends Event{
	
	}
	
	class AfterEvent extends Event{
	
	}
	
	class CompositeInstancePointcut extends aspectj::pointcuts::Pointcut, Ipc{
		containment reference java::types::TypeReference type(0..1);
		containment reference IpcComposition compexpr(1..1);
	}
	
	class IpcComposition {
		containment reference IpcCompositionChild child(1..1);
	}

	abstract class IpcCompositionChild{
	}
	
	class IpcUnion extends IpcCompositionChild{
		containment reference IpcUnionChild children(0..-1);
	}
	
	abstract class IpcUnionChild{
	}
	
	class IpcIntersection extends IpcUnionChild{
		reference Ipc terms(1..-1);
	}
	





}