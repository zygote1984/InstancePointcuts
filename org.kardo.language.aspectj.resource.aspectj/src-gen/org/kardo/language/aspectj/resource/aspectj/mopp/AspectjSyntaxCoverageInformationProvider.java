/**
 * <copyright>
 * </copyright>
 *
 * 
 */
package org.kardo.language.aspectj.resource.aspectj.mopp;

public class AspectjSyntaxCoverageInformationProvider {
	
	public org.eclipse.emf.ecore.EClass[] getClassesWithSyntax() {
		return new org.eclipse.emf.ecore.EClass[] {
			org.kardo.language.aspectj.commons.CommonsPackage.eINSTANCE.getAspectJCompilationUnit(),
			org.kardo.language.aspectj.commons.CommonsPackage.eINSTANCE.getAspect(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getCallPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getExecutionPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getGetPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getSetPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getThisPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getArgsPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getWithinPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getTargetPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getIfPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getReturningPointcut(),
			org.kardo.language.aspectj.pointcuts.PointcutsPackage.eINSTANCE.getAspectJPointcut(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getConditionalExprPattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getFieldPattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getConstructorPattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getMethodPattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getTypePattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getIdPattern(),
			org.kardo.language.aspectj.patterns.PatternsPackage.eINSTANCE.getParameterWildcard(),
			org.kardo.language.aspectj.advice.AdvicePackage.eINSTANCE.getAfterAdvice(),
			org.kardo.language.aspectj.advice.AdvicePackage.eINSTANCE.getAfterReturning(),
			org.kardo.language.aspectj.advice.AdvicePackage.eINSTANCE.getBeforeAdvice(),
			org.kardo.language.aspectj.pcexp.PcexpPackage.eINSTANCE.getPointcutExpression(),
			org.kardo.language.aspectj.pcexp.PcexpPackage.eINSTANCE.getPointcutOrExpression(),
			org.kardo.language.aspectj.pcexp.PcexpPackage.eINSTANCE.getPointcutAndExpression(),
			org.kardo.language.aspectj.pcexp.PcexpPackage.eINSTANCE.getPcAssignmentOperator(),
			org.emftext.language.java.containers.ContainersPackage.eINSTANCE.getEmptyModel(),
			org.emftext.language.java.containers.ContainersPackage.eINSTANCE.getPackage(),
			org.emftext.language.java.containers.ContainersPackage.eINSTANCE.getCompilationUnit(),
			org.emftext.language.java.imports.ImportsPackage.eINSTANCE.getClassifierImport(),
			org.emftext.language.java.imports.ImportsPackage.eINSTANCE.getPackageImport(),
			org.emftext.language.java.imports.ImportsPackage.eINSTANCE.getStaticMemberImport(),
			org.emftext.language.java.imports.ImportsPackage.eINSTANCE.getStaticClassifierImport(),
			org.emftext.language.java.classifiers.ClassifiersPackage.eINSTANCE.getClass_(),
			org.emftext.language.java.classifiers.ClassifiersPackage.eINSTANCE.getAnonymousClass(),
			org.emftext.language.java.classifiers.ClassifiersPackage.eINSTANCE.getInterface(),
			org.emftext.language.java.classifiers.ClassifiersPackage.eINSTANCE.getEnumeration(),
			org.emftext.language.java.classifiers.ClassifiersPackage.eINSTANCE.getAnnotation(),
			org.emftext.language.java.annotations.AnnotationsPackage.eINSTANCE.getAnnotationInstance(),
			org.emftext.language.java.annotations.AnnotationsPackage.eINSTANCE.getSingleAnnotationParameter(),
			org.emftext.language.java.annotations.AnnotationsPackage.eINSTANCE.getAnnotationParameterList(),
			org.emftext.language.java.annotations.AnnotationsPackage.eINSTANCE.getAnnotationAttributeSetting(),
			org.emftext.language.java.generics.GenericsPackage.eINSTANCE.getTypeParameter(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getEnumConstant(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getBlock(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getConstructor(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getInterfaceMethod(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getClassMethod(),
			org.emftext.language.java.annotations.AnnotationsPackage.eINSTANCE.getAnnotationAttribute(),
			org.emftext.language.java.parameters.ParametersPackage.eINSTANCE.getOrdinaryParameter(),
			org.emftext.language.java.parameters.ParametersPackage.eINSTANCE.getVariableLengthParameter(),
			org.emftext.language.java.variables.VariablesPackage.eINSTANCE.getLocalVariable(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getLocalVariableStatement(),
			org.emftext.language.java.variables.VariablesPackage.eINSTANCE.getAdditionalLocalVariable(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getField(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getAdditionalField(),
			org.emftext.language.java.members.MembersPackage.eINSTANCE.getEmptyMember(),
			org.emftext.language.java.instantiations.InstantiationsPackage.eINSTANCE.getNewConstructorCall(),
			org.emftext.language.java.instantiations.InstantiationsPackage.eINSTANCE.getExplicitConstructorCall(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArrayInstantiationByValuesTyped(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArrayInstantiationByValuesUntyped(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArrayInstantiationBySize(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArrayInitializer(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArraySelector(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getNamespaceClassifierReference(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getClassifierReference(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getMethodCall(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getIdentifierReference(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getReflectiveClassReference(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getSelfReference(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getPrimitiveTypeReference(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getThis(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getSuper(),
			org.emftext.language.java.references.ReferencesPackage.eINSTANCE.getStringReference(),
			org.emftext.language.java.generics.GenericsPackage.eINSTANCE.getQualifiedTypeArgument(),
			org.emftext.language.java.generics.GenericsPackage.eINSTANCE.getUnknownTypeArgument(),
			org.emftext.language.java.generics.GenericsPackage.eINSTANCE.getExtendsTypeArgument(),
			org.emftext.language.java.generics.GenericsPackage.eINSTANCE.getSuperTypeArgument(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getAssert(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getCondition(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getForLoop(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getForEachLoop(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getWhileLoop(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getDoWhileLoop(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getEmptyStatement(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getSynchronizedBlock(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getTryBlock(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getCatchBlock(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getSwitch(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getNormalSwitchCase(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getDefaultSwitchCase(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getReturn(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getThrow(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getBreak(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getContinue(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getJumpLabel(),
			org.emftext.language.java.statements.StatementsPackage.eINSTANCE.getExpressionStatement(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getExpressionList(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getAssignmentExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getConditionalExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getConditionalOrExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getConditionalAndExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getInclusiveOrExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getExclusiveOrExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getAndExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getEqualityExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getInstanceOfExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getRelationExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getShiftExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getAdditiveExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getMultiplicativeExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getUnaryExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getSuffixUnaryModificationExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getPrefixUnaryModificationExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getCastExpression(),
			org.emftext.language.java.expressions.ExpressionsPackage.eINSTANCE.getNestedExpression(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignment(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentPlus(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentMinus(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentMultiplication(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentDivision(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentAnd(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentOr(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentExclusiveOr(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentModulo(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentLeftShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentRightShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAssignmentUnsignedRightShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getAddition(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getSubtraction(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getMultiplication(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getDivision(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getRemainder(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getLessThan(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getLessThanOrEqual(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getGreaterThan(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getGreaterThanOrEqual(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getLeftShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getRightShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getUnsignedRightShift(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getEqual(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getNotEqual(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getPlusPlus(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getMinusMinus(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getComplement(),
			org.emftext.language.java.operators.OperatorsPackage.eINSTANCE.getNegate(),
			org.emftext.language.java.arrays.ArraysPackage.eINSTANCE.getArrayDimension(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getNullLiteral(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getPublic(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getAbstract(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getProtected(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getPrivate(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getFinal(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getStatic(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getNative(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getSynchronized(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getTransient(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getVolatile(),
			org.emftext.language.java.modifiers.ModifiersPackage.eINSTANCE.getStrictfp(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getVoid(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getBoolean(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getChar(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getByte(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getShort(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getInt(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getLong(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getFloat(),
			org.emftext.language.java.types.TypesPackage.eINSTANCE.getDouble(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getDecimalLongLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getDecimalFloatLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getDecimalIntegerLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getDecimalDoubleLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getHexLongLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getHexFloatLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getHexDoubleLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getHexIntegerLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getOctalLongLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getOctalIntegerLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getCharacterLiteral(),
			org.emftext.language.java.literals.LiteralsPackage.eINSTANCE.getBooleanLiteral(),
		};
	}
	
	public org.eclipse.emf.ecore.EClass[] getStartSymbols() {
		return new org.eclipse.emf.ecore.EClass[] {
			org.kardo.language.aspectj.commons.CommonsPackage.eINSTANCE.getAspectJCompilationUnit(),
		};
	}
	
}
